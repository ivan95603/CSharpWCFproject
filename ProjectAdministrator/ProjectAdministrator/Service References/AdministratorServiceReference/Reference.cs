//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectAdministrator.AdministratorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ListaDeo", Namespace="http://schemas.datacontract.org/2004/07/", ItemName="Deo")]
    [System.SerializableAttribute()]
    public class ListaDeo : System.Collections.Generic.List<ProjectLibrary.Deo> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdministratorServiceReference.IAdministratorServis", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAdministratorServis {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/Login", ReplyAction="http://tempuri.org/IAdministratorServis/LoginResponse")]
        bool Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/Login", ReplyAction="http://tempuri.org/IAdministratorServis/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/proveriLogin", ReplyAction="http://tempuri.org/IAdministratorServis/proveriLoginResponse")]
        bool proveriLogin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/proveriLogin", ReplyAction="http://tempuri.org/IAdministratorServis/proveriLoginResponse")]
        System.Threading.Tasks.Task<bool> proveriLoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/SumaTroskovaNaAutuZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/SumaTroskovaNaAutuZaKorisnikaResponse")]
        double SumaTroskovaNaAutuZaKorisnika();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/SumaTroskovaNaAutuZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/SumaTroskovaNaAutuZaKorisnikaResponse")]
        System.Threading.Tasks.Task<double> SumaTroskovaNaAutuZaKorisnikaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/StatusPopravkiNaAutu", ReplyAction="http://tempuri.org/IAdministratorServis/StatusPopravkiNaAutuResponse")]
        ProjectLibrary.status[] StatusPopravkiNaAutu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/StatusPopravkiNaAutu", ReplyAction="http://tempuri.org/IAdministratorServis/StatusPopravkiNaAutuResponse")]
        System.Threading.Tasks.Task<ProjectLibrary.status[]> StatusPopravkiNaAutuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PovuciDelove", ReplyAction="http://tempuri.org/IAdministratorServis/PovuciDeloveResponse")]
        ProjectAdministrator.AdministratorServiceReference.ListaDeo PovuciDelove();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PovuciDelove", ReplyAction="http://tempuri.org/IAdministratorServis/PovuciDeloveResponse")]
        System.Threading.Tasks.Task<ProjectAdministrator.AdministratorServiceReference.ListaDeo> PovuciDeloveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PromeniCenuZaIDOdDeo", ReplyAction="http://tempuri.org/IAdministratorServis/PromeniCenuZaIDOdDeoResponse")]
        bool PromeniCenuZaIDOdDeo(int ID, double Cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PromeniCenuZaIDOdDeo", ReplyAction="http://tempuri.org/IAdministratorServis/PromeniCenuZaIDOdDeoResponse")]
        System.Threading.Tasks.Task<bool> PromeniCenuZaIDOdDeoAsync(int ID, double Cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PovuciKorisnike", ReplyAction="http://tempuri.org/IAdministratorServis/PovuciKorisnikeResponse")]
        ProjectLibrary.Korisnik[] PovuciKorisnike();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PovuciKorisnike", ReplyAction="http://tempuri.org/IAdministratorServis/PovuciKorisnikeResponse")]
        System.Threading.Tasks.Task<ProjectLibrary.Korisnik[]> PovuciKorisnikeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajKorisnikaResponse")]
        bool DodajKorisnika(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> DodajKorisnikaAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiKorisnikaResponse")]
        bool ObrisiKorisnika(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> ObrisiKorisnikaAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PromeniUserNameKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/PromeniUserNameKorisnikaResponse")]
        bool PromeniUserNameKorisnika(string newUserName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/PromeniUserNameKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/PromeniUserNameKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> PromeniUserNameKorisnikaAsync(string newUserName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaResponse")]
        bool DodajAutomobilZaKorisnika(string userName, string naziv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> DodajAutomobilZaKorisnikaAsync(string userName, string naziv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaID", ReplyAction="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaIDResponse")]
        bool DodajAutomobilZaKorisnikaID(int userID, string naziv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaID", ReplyAction="http://tempuri.org/IAdministratorServis/DodajAutomobilZaKorisnikaIDResponse")]
        System.Threading.Tasks.Task<bool> DodajAutomobilZaKorisnikaIDAsync(int userID, string naziv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaResponse")]
        bool ObrisiAutomobilZaKorisnika(string userName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> ObrisiAutomobilZaKorisnikaAsync(string userName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaID", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaIDResponse")]
        bool ObrisiAutomobilZaKorisnikaID(int userID, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaID", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiAutomobilZaKorisnikaIDResponse")]
        System.Threading.Tasks.Task<bool> ObrisiAutomobilZaKorisnikaIDAsync(int userID, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajPopravkuZaAutoZaKorisnikaResponse")]
        bool DodajPopravkuZaAutoZaKorisnika(int userID, int carID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajPopravkuZaAutoZaKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> DodajPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiPopravkuZaAutoZaKorisnikaResponse")]
        bool ObrisiPopravkuZaAutoZaKorisnika(int userID, int carID, int popravkaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiPopravkuZaAutoZaKorisnikaResponse")]
        System.Threading.Tasks.Task<bool> ObrisiPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int popravkaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajDeoZaPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajDeoZaPopravkuZaAutoZaKorisnikaRespon" +
            "se")]
        bool DodajDeoZaPopravkuZaAutoZaKorisnika(int userID, int carID, int fixID, int partID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/DodajDeoZaPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/DodajDeoZaPopravkuZaAutoZaKorisnikaRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> DodajDeoZaPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int fixID, int partID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiDeoZaPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiDeoZaPopravkuZaAutoZaKorisnikaRespo" +
            "nse")]
        bool ObrisiDeoZaPopravkuZaAutoZaKorisnika(int userID, int carID, int fixID, int partID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministratorServis/ObrisiDeoZaPopravkuZaAutoZaKorisnika", ReplyAction="http://tempuri.org/IAdministratorServis/ObrisiDeoZaPopravkuZaAutoZaKorisnikaRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> ObrisiDeoZaPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int fixID, int partID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministratorServisChannel : ProjectAdministrator.AdministratorServiceReference.IAdministratorServis, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministratorServisClient : System.ServiceModel.ClientBase<ProjectAdministrator.AdministratorServiceReference.IAdministratorServis>, ProjectAdministrator.AdministratorServiceReference.IAdministratorServis {
        
        public AdministratorServisClient() {
        }
        
        public AdministratorServisClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministratorServisClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministratorServisClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministratorServisClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public bool proveriLogin() {
            return base.Channel.proveriLogin();
        }
        
        public System.Threading.Tasks.Task<bool> proveriLoginAsync() {
            return base.Channel.proveriLoginAsync();
        }
        
        public double SumaTroskovaNaAutuZaKorisnika() {
            return base.Channel.SumaTroskovaNaAutuZaKorisnika();
        }
        
        public System.Threading.Tasks.Task<double> SumaTroskovaNaAutuZaKorisnikaAsync() {
            return base.Channel.SumaTroskovaNaAutuZaKorisnikaAsync();
        }
        
        public ProjectLibrary.status[] StatusPopravkiNaAutu() {
            return base.Channel.StatusPopravkiNaAutu();
        }
        
        public System.Threading.Tasks.Task<ProjectLibrary.status[]> StatusPopravkiNaAutuAsync() {
            return base.Channel.StatusPopravkiNaAutuAsync();
        }
        
        public ProjectAdministrator.AdministratorServiceReference.ListaDeo PovuciDelove() {
            return base.Channel.PovuciDelove();
        }
        
        public System.Threading.Tasks.Task<ProjectAdministrator.AdministratorServiceReference.ListaDeo> PovuciDeloveAsync() {
            return base.Channel.PovuciDeloveAsync();
        }
        
        public bool PromeniCenuZaIDOdDeo(int ID, double Cena) {
            return base.Channel.PromeniCenuZaIDOdDeo(ID, Cena);
        }
        
        public System.Threading.Tasks.Task<bool> PromeniCenuZaIDOdDeoAsync(int ID, double Cena) {
            return base.Channel.PromeniCenuZaIDOdDeoAsync(ID, Cena);
        }
        
        public ProjectLibrary.Korisnik[] PovuciKorisnike() {
            return base.Channel.PovuciKorisnike();
        }
        
        public System.Threading.Tasks.Task<ProjectLibrary.Korisnik[]> PovuciKorisnikeAsync() {
            return base.Channel.PovuciKorisnikeAsync();
        }
        
        public bool DodajKorisnika(string userName, string password) {
            return base.Channel.DodajKorisnika(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> DodajKorisnikaAsync(string userName, string password) {
            return base.Channel.DodajKorisnikaAsync(userName, password);
        }
        
        public bool ObrisiKorisnika(string userName) {
            return base.Channel.ObrisiKorisnika(userName);
        }
        
        public System.Threading.Tasks.Task<bool> ObrisiKorisnikaAsync(string userName) {
            return base.Channel.ObrisiKorisnikaAsync(userName);
        }
        
        public bool PromeniUserNameKorisnika(string newUserName, string userName) {
            return base.Channel.PromeniUserNameKorisnika(newUserName, userName);
        }
        
        public System.Threading.Tasks.Task<bool> PromeniUserNameKorisnikaAsync(string newUserName, string userName) {
            return base.Channel.PromeniUserNameKorisnikaAsync(newUserName, userName);
        }
        
        public bool DodajAutomobilZaKorisnika(string userName, string naziv) {
            return base.Channel.DodajAutomobilZaKorisnika(userName, naziv);
        }
        
        public System.Threading.Tasks.Task<bool> DodajAutomobilZaKorisnikaAsync(string userName, string naziv) {
            return base.Channel.DodajAutomobilZaKorisnikaAsync(userName, naziv);
        }
        
        public bool DodajAutomobilZaKorisnikaID(int userID, string naziv) {
            return base.Channel.DodajAutomobilZaKorisnikaID(userID, naziv);
        }
        
        public System.Threading.Tasks.Task<bool> DodajAutomobilZaKorisnikaIDAsync(int userID, string naziv) {
            return base.Channel.DodajAutomobilZaKorisnikaIDAsync(userID, naziv);
        }
        
        public bool ObrisiAutomobilZaKorisnika(string userName, int id) {
            return base.Channel.ObrisiAutomobilZaKorisnika(userName, id);
        }
        
        public System.Threading.Tasks.Task<bool> ObrisiAutomobilZaKorisnikaAsync(string userName, int id) {
            return base.Channel.ObrisiAutomobilZaKorisnikaAsync(userName, id);
        }
        
        public bool ObrisiAutomobilZaKorisnikaID(int userID, int id) {
            return base.Channel.ObrisiAutomobilZaKorisnikaID(userID, id);
        }
        
        public System.Threading.Tasks.Task<bool> ObrisiAutomobilZaKorisnikaIDAsync(int userID, int id) {
            return base.Channel.ObrisiAutomobilZaKorisnikaIDAsync(userID, id);
        }
        
        public bool DodajPopravkuZaAutoZaKorisnika(int userID, int carID, int status) {
            return base.Channel.DodajPopravkuZaAutoZaKorisnika(userID, carID, status);
        }
        
        public System.Threading.Tasks.Task<bool> DodajPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int status) {
            return base.Channel.DodajPopravkuZaAutoZaKorisnikaAsync(userID, carID, status);
        }
        
        public bool ObrisiPopravkuZaAutoZaKorisnika(int userID, int carID, int popravkaID) {
            return base.Channel.ObrisiPopravkuZaAutoZaKorisnika(userID, carID, popravkaID);
        }
        
        public System.Threading.Tasks.Task<bool> ObrisiPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int popravkaID) {
            return base.Channel.ObrisiPopravkuZaAutoZaKorisnikaAsync(userID, carID, popravkaID);
        }
        
        public bool DodajDeoZaPopravkuZaAutoZaKorisnika(int userID, int carID, int fixID, int partID) {
            return base.Channel.DodajDeoZaPopravkuZaAutoZaKorisnika(userID, carID, fixID, partID);
        }
        
        public System.Threading.Tasks.Task<bool> DodajDeoZaPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int fixID, int partID) {
            return base.Channel.DodajDeoZaPopravkuZaAutoZaKorisnikaAsync(userID, carID, fixID, partID);
        }
        
        public bool ObrisiDeoZaPopravkuZaAutoZaKorisnika(int userID, int carID, int fixID, int partID) {
            return base.Channel.ObrisiDeoZaPopravkuZaAutoZaKorisnika(userID, carID, fixID, partID);
        }
        
        public System.Threading.Tasks.Task<bool> ObrisiDeoZaPopravkuZaAutoZaKorisnikaAsync(int userID, int carID, int fixID, int partID) {
            return base.Channel.ObrisiDeoZaPopravkuZaAutoZaKorisnikaAsync(userID, carID, fixID, partID);
        }
    }
}
